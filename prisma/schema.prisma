// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model User {
  id                 String         @id @default(auto()) @map("_id") @db.ObjectId
  name               String?
  username           String?        @unique
  bio                String?
  email              String?        @unique
  emailVerified      DateTime?
  image              String?
  coverImage         String?
  profileImage       String?
  hashedPassword     String?
  createdAt          DateTime       @default(now())
  updatedAt          DateTime       @updatedAt
  followingIds       String[]       @db.ObjectId
  hasNotification    Boolean?
  posts              Post[]
  notifications      Notification[]
  favoriteCurrencies String[]
  transactions Transaction[]
}

model Post {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  body      String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
  userId    String   @db.ObjectId
  likedIds  String[] @db.ObjectId
  user      User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Currency {
  id   String @id @default(auto()) @map("_id") @db.ObjectId
  name String
}

model Transaction {
  id   String @id @default(auto()) @map("_id") @db.ObjectId
  entityType String?
  quantity Float
  unitPrice Float
  stock String?
  cryptoCurrency String?
  foreignCurrencyType String?
  transactionType String?
  userId    String?  @db.ObjectId
  createdAt DateTime @default(now())
  user  User?    @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model Notification {
  id        String   @id @default(auto()) @map("_id") @db.ObjectId
  body      String
  userId    String?  @db.ObjectId
  createdAt DateTime @default(now())
  user      User?    @relation(fields: [userId], references: [id], onDelete: Cascade)
}
